#include <Adafruit_ILI9341.h>
#include <AdafruitIO.h>
#include <gfxfont.h>
#include <Adafruit_GFX.h>
#include <TouchScreen.h>

/*
 * Code for pH sensor screen for ECE 4905 Team 24 - Timmy Le.382
 */

#include <TFT_eSPI.h> // Hardware-specific library
#include <SPI.h>

//TFT_eSPI tft = TFT_eSPI();  // Invoke custom library
/*
#define YP analogRead()   // must be an analog pin, use "An" notation!
#define XM analogRead()  // must be an analog pin, use "An" notation!
#define YM    // can be a digital pin
#define XP    // can be a digital pin
*/


#define XP analogRead(15)
#define XM analogRead(12)
#define YP analogRead(2)
#define YM analogRead(13)

/*
#define XP 15
#define XM 12
#define YP 2
#define YM 13
*/
TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);

#define TFT_SCK    21
#define TFT_MOSI   19
#define TFT_MISO   22
#define TFT_CS     23
#define TFT_DC     5
#define TFT_RESET  10
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_SCK, TFT_RESET, TFT_MISO);

uint32_t sysTime = 0;  // System current time
uint16_t X_CENTER = 170;
uint16_t Y_CENTER = 120;
uint16_t X_MAX = 0;
uint16_t Y_MAX = 0;
const int pH_pin=14;
float pH_reading;
float Value;

#define BLACK 0x0000
#define BLUE 0x001F
#define RED 0xF800
#define GREEN 0x07E0
#define CYAN 0x07FF
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF

void setup() {
  // put your setup code here, to run once:
  
  tft.initSPI();
  tft.begin();
  tft.setRotation(1);
  tft.fillScreen(BLACK);

  homeScreen();
  sysTime = millis();
  Serial.begin(9600);
  pinMode(pH_pin,INPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  
    pH_display();
    TSPoint p = ts.getPoint();

    if (p.z > ts.pressureThreshhold) {
      Serial.print("X = "); Serial.print(p.x);
      Serial.print("\tY = "); Serial.print(p.y);
      Serial.print("\tPressure = "); Serial.println(p.z);
  }
    delay(1000); // delay in ms
}


/* Create the home screen */
void homeScreen() {
  // Header
  tft.setCursor(X_CENTER - 100, Y_CENTER - 100);
  tft.setTextSize(2);
  tft.setTextColor(WHITE, BLACK);
  tft.print("Team 24 pH Sensor");
  
  tft.setCursor(X_CENTER - 100, Y_CENTER - 60);
  tft.setTextSize(4);
  tft.setTextColor(WHITE, BLACK);
  tft.print("pH Level:");
/*
  // Battery Button
  tft.fillRect();
  tft.drawCentreString("Battery", X_CENTER - 160, Y_CENTER + 80, 2);

  // Info/Extra Button
  tft.fillRect();
  tft.drawCentreString("Info", X_CENTER + 40, Y_CENTER + 80); 
  */
}

/* Displaing pH Value */
void pH_display() {
    Value = analogRead(pH_pin);
    float voltage = Value * (3.3/4095.0);
    pH_reading = (3.3  * voltage) * (14/10.89);
    
    if (pH_reading < 7.0 or pH_reading >= 8.0) { // display number in red when solution not neutral
      tft.setCursor(X_CENTER - 110, Y_CENTER - 20);
      tft.setTextSize(7);
      tft.setTextColor(RED, BLACK);
      tft.print(pH_reading);
    } else { // display number in green when solution is neutral
      tft.setCursor(X_CENTER - 110, Y_CENTER - 20);
      tft.setTextSize(7);
      tft.setTextColor(GREEN, BLACK);
      tft.print(pH_reading);
    }
}

void batteryScreen() {
  
}

void infoScreen() {
  
}
