#include <Adafruit_ILI9341.h>
#include <AdafruitIO.h>
#include <gfxfont.h>
#include <Adafruit_GFX.h>
#include <TouchScreen.h>
#include <TFT_eSPI.h> // Hardware-specific library
#include <SPI.h>

/*
   Code for pH sensor screen for ECE 4905 Team 24 - Timmy Le.382
*/

//TFT_eSPI tft = TFT_eSPI();  // Invoke custom library

// *** I/O Pins and defines ***

#define XP 15
#define XM 12
#define YP 2
#define YM 13
// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// For the one we're using, its 300 ohms across the X plate
TouchScreen ts = TouchScreen(XP, YP, XM, YM, 50);

#define TFT_SCK    21
#define TFT_MISO   22
#define TFT_MOSI   19
#define TFT_CS     23
#define TFT_DC     18
#define TFT_RESET  5
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_SCK, TFT_RESET, TFT_MISO);

#define PH_PIN 14

#define BLACK 0x0000
#define BLUE 0x001F
#define RED 0xF800
#define GREEN 0x07E0
#define CYAN 0x07FF
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF

// ***GLOBAL VARIABLE***
uint16_t X_MAX = 320;
uint16_t Y_MAX = 240; // -1 pixel to display
uint16_t X_CENTER = X_MAX / 2;
uint16_t Y_CENTER = Y_MAX / 2;
float pH_reading;
float Value;
bool checkBack = false;
float OFFSET = 0.0;

// ***** Code Starts *****
void setup() {
  // put your setup code here, to run once:

  tft.initSPI();
  tft.begin();
  tft.setRotation(1);
  tft.fillScreen(BLACK);

  homeScreen();
  Serial.begin(9600);
  pinMode(PH_PIN, INPUT);

}

void loop() {
  // put your main code here, to run repeatedly:

  TSPoint p = ts.getPoint();
  Serial.print("X = "); Serial.print(p.x);
  Serial.print("\tY = "); Serial.print(p.y);
  Serial.print("\tPressure = "); Serial.println(p.z);

  // if battery button is pressed 
  if (p.x > -3100 and p.x < -1200 and p.y > -2800 and p.y < -1000 and p.z != 0 and checkBack == false) {
    tft.fillScreen(BLACK);
    batteryScreen();
    checkBack = true;
  }

    // if extra button is pressed
    else if (p.x > -2400 and p.x < -1600 and p.y > -260 and p.y < 380 and p.z != 0 and checkBack == false) {
      tft.fillScreen(BLACK);
      extraScreen();
      checkBack = true;
    }

  // back button
  else if (p.z != 0 and checkBack == true) {
    tft.fillScreen(BLACK);
    homeScreen();
    checkBack = false;
  }

  if (checkBack == false) {
    pH_display();
  }

  delay(500); // delay in ms
}

/* Create the home screen */
void homeScreen() {
  // Header
  tft.setCursor(X_CENTER - 100, 10);
  tft.setTextSize(2);
  tft.setTextColor(WHITE, BLACK);
  tft.print("Team 24 pH Sensor");

  tft.setCursor(X_CENTER - 100, 40);
  tft.setTextSize(4);
  tft.setTextColor(WHITE, BLACK);
  tft.print("pH Level:");

  // Battery Button
  tft.fillRect(15, Y_MAX - 50, 50, 40, GREEN);
  tft.setCursor(20, Y_MAX - 33);
  tft.setTextSize(1);
  tft.setTextColor(BLACK);
  tft.print("Battery");

  // Info/Extra Button
  tft.fillRect(X_MAX - 75, Y_MAX - 50, 50, 40, CYAN);
  tft.setCursor(X_MAX - 65, Y_MAX - 33);
  tft.setTextSize(1);
  tft.setTextColor(BLACK);
  tft.print("Extra");

}

/* Displaing pH Value */
void pH_display() {
  Value = analogRead(PH_PIN);
  float voltage = Value * (5.0/4095.0);
  pH_reading = (3.3  * voltage) + OFFSET;
  //Serial.print("Value "); Serial.println(Value);
  //Serial.print("Voltage "); Serial.println(voltage);
  //Serial.print("pH "); Serial.println(pH_reading);

  if (pH_reading < 6.99) {                             // Acid
    tft.setCursor(X_CENTER - 110, Y_CENTER - 30);
    tft.setTextSize(7);
    tft.setTextColor(RED, BLACK);
    tft.print(pH_reading);

    tft.fillRect(X_CENTER - 23, Y_CENTER + 40, 60, 10, BLACK);
    tft.setCursor(X_CENTER - 25, Y_CENTER + 40);
    tft.setTextSize(1);
    tft.setTextColor(RED, BLACK);
    tft.print("Acidic");

  } else if (pH_reading >= 8.0) {                     // Base
    tft.setCursor(X_CENTER - 110, Y_CENTER - 30);
    tft.setTextSize(7);
    tft.setTextColor(RED, BLACK);
    tft.print(pH_reading);

    tft.fillRect(X_CENTER - 23, Y_CENTER + 40, 60, 10, BLACK);
    tft.setCursor(X_CENTER - 25, Y_CENTER + 40);
    tft.setTextSize(1);
    tft.setTextColor(RED, BLACK);
    tft.print("Alkaline");

  } else {                                           // Neutral
    tft.setCursor(X_CENTER - 110, Y_CENTER - 30);
    tft.setTextSize(7);
    tft.setTextColor(GREEN, BLACK);
    tft.print(pH_reading);

    tft.fillRect(X_CENTER - 23, Y_CENTER + 40, 60, 10, BLACK);
    tft.setCursor(X_CENTER - 25, Y_CENTER + 40);
    tft.setTextSize(1);
    tft.setTextColor(GREEN, BLACK);
    tft.print("Neutral");
  }
}

void batteryScreen() {
  tft.setCursor(20, Y_CENTER);
  tft.setTextSize(2);
  tft.setTextColor(MAGENTA);
  tft.print("Battery Page, TBD");

  // back button
  tft.fillRect(X_MAX - 75, Y_MAX - 50, 50, 40, CYAN);
  tft.setCursor(X_MAX - 65, Y_MAX - 33);
  tft.setTextSize(1);
  tft.setTextColor(BLACK);
  tft.print("Back");
}

void extraScreen() {

  tft.setCursor(1, 15);
  tft.setTextSize(2);
  tft.setTextColor(WHITE);
  tft.print("This screen is extra...");
  tft.print("\n");
  tft.print("Team 24 pH Sensor Project");
  tft.print("\n");
  tft.setTextSize(2);
  tft.print("Victoria \n");
  tft.print("James \n");
  tft.print("Jared \n");
  tft.print("Chamyukthan \n");
  tft.print("Daniel \n");
  tft.print("Timmy \n");

  // back button
  tft.fillRect(X_MAX - 75, Y_MAX - 50, 50, 40, CYAN);
  tft.setCursor(X_MAX - 65, Y_MAX - 33);
  tft.setTextSize(1);
  tft.setTextColor(BLACK);
  tft.print("Back");
}
